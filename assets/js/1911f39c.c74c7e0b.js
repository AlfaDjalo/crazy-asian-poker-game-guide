"use strict";(self.webpackChunkcrazy_asian_poker_game_guide=self.webpackChunkcrazy_asian_poker_game_guide||[]).push([[850],{3513:(e,r,n)=>{n.d(r,{A:()=>p});var o=n(6540),t=n(9030),a=n(4848);const s=e=>{let{card:r}=e;return(0,o.useEffect)((()=>{r&&console.log("Card rendered:",r)}),[r]),r?(0,a.jsx)("img",{src:`https://deckofcardsapi.com/static/img/${r}.png`,alt:r,className:"poker-card",onError:e=>{console.error(`Failed to load card image for ${r}`),e.target.className="poker-card-error",e.target.alt=r,e.target.src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'/%3E",e.target.insertAdjacentHTML("afterend",`<div style="position:absolute;">${r}</div>`)}}):(0,a.jsx)("span",{className:"poker-card-empty"})},l=()=>{const e=["A","2","3","4","5","6","7","8","9","0","J","Q","K"],r=["H","D","C","S"].flatMap((r=>e.map((e=>`${e}${r}`))));return i([...r])},i=e=>{const r=[...e];for(let n=r.length-1;n>0;n--){const e=Math.floor(Math.random()*(n+1));[r[n],r[e]]=[r[e],r[n]]}return r},c=10,d=1e3,u=e=>{const r=e.toString();if(3!==r.length)return console.error(`Invalid position format: ${e}. Expected xyz format.`),null;const n=parseInt(r[0],10),o=parseInt(r[1],10),t=parseInt(r[2],10);return n>=5||o>=c||![0,1,2].includes(t)?(console.error(`Invalid position values: row=${n}, col=${o}, offset=${t}`),null):{row:n,col:o,offset:t}},f=(e,r,n)=>({displayRow:e,displayCol:r}),p=e=>{let{configPath:r="/data/boards/double-board.json",predefinedCards:n=null,dealDelayMs:i=d}=e;const p=(0,t.Ay)(r),[h,g]=(0,o.useState)(null),[m,b]=(0,o.useState)([]),[x,y]=(0,o.useState)(0),[w,k]=(0,o.useState)(0),[C,S]=(0,o.useState)(!1),[j,v]=(0,o.useState)(null),[$,M]=(0,o.useState)(new Set),[A,N]=(0,o.useState)((()=>Array(5).fill(null).map((()=>Array(c).fill(null))))),R=(0,o.useMemo)((()=>n?Array.isArray(n)&&n.length>0&&Array.isArray(n[0])?n.flat():n:null),[n]),E=(0,o.useCallback)((()=>{y(0),k(0),S(!1),M(new Set),N(Array(5).fill(null).map((()=>Array(c).fill(null))))}),[]),F=(0,o.useCallback)((e=>{if(!h?.boardCardSchedule)return[];let r=[];for(let n=0;n<=e;n++)n<h.boardCardSchedule.length&&(r=[...r,...h.boardCardSchedule[n]]);return r}),[h]),O=(0,o.useMemo)((()=>{if(!h?.boardCardSchedule)return{rowOffset:0,colOffset:0};return(e=>{if(!e||0===e.length)return{rowOffset:0,colOffset:0};let r=5,n=-1,o=c,t=-1;e.forEach((e=>{const a=u(e);if(a){const{displayRow:e,displayCol:s}=f(a.row,a.col,a.offset);r=Math.min(r,e),n=Math.max(n,e),o=Math.min(o,s),t=Math.max(t,s)}}));const a=n-r+1,s=t-o+1;return{rowOffset:Math.floor((5-a)/2)-r,colOffset:Math.floor((c-s)/2)-o}})(h.boardCardSchedule.flat())}),[h]);(0,o.useEffect)((()=>{console.log("Fetching config from:",p),fetch(p).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status} \u2014 URL: ${p}`);return e.json()})).then((e=>{console.log("Config loaded:",e),g(e);const r=l();b(r),console.log("Generated random deck:",r),E()})).catch((e=>{console.error("Failed to load config:",e),v(`Failed to load config: ${e.message}`)}))}),[p,E]),(0,o.useEffect)((()=>{var e;!R||(e=R,Array.isArray(e)&&e.every((e=>null===e||(e=>{if(!e||"string"!=typeof e||2!==e.length)return!1;const r=e[0],n=e[1];return["A","2","3","4","5","6","7","8","9","0","J","Q","K"].includes(r)&&["H","D","C","S"].includes(n)})(e))))||v("Invalid predefined cards format")}),[R]),(0,o.useEffect)((()=>{if(!h||!C)return;const e=F(x);if(w<e.length){const r=setTimeout((()=>{const r=e[w];T(r,w,O),k(w+1)}),i);return()=>clearTimeout(r)}S(!1)}),[w,C,h,x,i,F,O]);const T=(e,r,n)=>{const o=u(e);if(!o)return;const{row:t,col:a,offset:s}=o,{displayRow:l,displayCol:i}=f(t,a),c=Math.max(0,Math.min(4,l+n.rowOffset)),d=Math.max(0,Math.min(9,i+n.colOffset));let p=null;p=R&&r<R.length?R[r]:m[r]||null,console.log(`Dealing card ${p} to position ${e} (${t},${a}) -> display (${l},${i}) -> centered (${c},${d})`);const h={card:p,originalRow:t,originalCol:a,offset:s,displayRow:c,displayCol:d,positionStr:e,isSelected:!1};N((e=>{const r=e.map((e=>[...e]));return r[c][d]=h,r}))};(0,o.useEffect)((()=>{h&&0===x&&!C&&0===w&&h.boardCardSchedule?.length>0&&(console.log("Auto-starting preflop deal"),S(!0))}),[h]);return j?(0,a.jsxs)("div",{className:"error-message",children:["Error: ",j]}):h?(0,a.jsxs)("div",{className:"poker-board-viewer",children:[(0,a.jsx)("h3",{children:h.name}),(0,a.jsx)("div",{className:"poker-grid",children:Array(5).fill(null).map(((e,r)=>(0,a.jsx)("div",{className:"poker-row",children:Array(c).fill(null).map(((e,n)=>{const o=A[r][n],t=r-O.rowOffset,l=n-O.colOffset,i=`${t}${l}`,d=t>=0&&l>=0?h?.boardNames?.[i]:null;return(0,a.jsxs)("div",{className:"poker-cell",children:[d&&(0,a.jsx)("div",{className:"board-name",children:d}),o&&(0,a.jsx)("div",{className:`card-container ${o.isSelected?"selected":""} ${1===o.offset?"offset-up":""} ${2===o.offset?"offset-right":""}`,onClick:()=>(e=>{if(!e)return;console.log(`Card clicked: ${e.card} at (${e.originalRow},${e.originalCol}), currently selected: ${e.isSelected}`);const{originalRow:r,originalCol:n,offset:o}=e,t=`${r}-${n}`;M((e=>{const r=new Set(e);return r.has(t)?r.delete(t):r.add(t),console.log("Selection toggled. New selection state:",r),r})),N((o=>{const t=o.map((e=>[...e])),a=!e.isSelected;for(let e=0;e<5;e++)for(let o=0;o<c;o++){const s=t[e][o];if(s&&s.originalRow===r&&s.originalCol===n){t[e][o]={...s,isSelected:a};break}}return t}))})(o),children:(0,a.jsx)(s,{card:o.card})})]},`${r}-${n}`)}))},r)))}),(0,a.jsxs)("div",{className:"controls",children:[(0,a.jsx)("button",{onClick:()=>{if(console.log("dealNextStreet called, current step:",x,"config length:",h?.boardCardSchedule?.length),!h||x>=h.boardCardSchedule.length-1)return;const e=x+1,r=F(x);y(e),S(!0),k(r.length)},disabled:x>=h.boardCardSchedule.length-1||C,children:"Deal Next Street"}),(0,a.jsx)("button",{onClick:()=>{if(!R){const e=l();b(e),console.log("Reshuffled deck:",e)}E()},disabled:C,children:"Replay Hand"})]})]}):(0,a.jsx)("div",{className:"loading",children:"Loading poker board configuration..."})}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>l});var o=n(6540);const t={},a=o.createContext(t);function s(e){const r=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(a.Provider,{value:r},e.children)}},8541:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"help-files/board-configurations/funnel","title":"Funnel","description":"Description of Funnel board configuration","source":"@site/docs/help-files/board-configurations/funnel.mdx","sourceDirName":"help-files/board-configurations","slug":"/help-files/board-configurations/funnel","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/funnel","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/help-files/board-configurations/funnel.mdx","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"title":"Funnel","description":"Description of Funnel board configuration","sidebar_position":11},"sidebar":"tutorialSidebar","previous":{"title":"Countdown","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/countdown"},"next":{"title":"Good Boys Bad Boys","permalink":"/crazy-asian-poker-game-guide/help-files/other-games/good-boys-bad-boys"}}');var t=n(4848),a=n(8453),s=n(3513);const l={title:"Funnel",description:"Description of Funnel board configuration",sidebar_position:11},i=void 0,c={},d=[];function u(e){const r={li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:"Three flops are dealt, each with three cards."}),"\n",(0,t.jsx)(r.p,{children:"Two turns are dealt, each with two cards."}),"\n",(0,t.jsx)(r.p,{children:"One river is dealt with one card."}),"\n",(0,t.jsx)(r.p,{children:"To make a hand a player uses cards from one flop, one turn and the\r\nriver. The turn must make a path from the flop to the turn - ie. if\r\nusing flop 1, a player can only use turn 1. If using flop 2, a player\r\ncan use either turn. If using flop 3, a player must use turn 2."}),"\n",(0,t.jsx)(s.A,{configPath:"/data/boards/funnel.json"}),"\n",(0,t.jsx)(r.p,{children:"Variants of Funnel include:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"High/ low (split pot);"}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"High/low/hand (3 points)."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"There are also variants using different numbers of turn and river cards."})]})}function f(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);
"use strict";(self.webpackChunkcrazy_asian_poker_game_guide=self.webpackChunkcrazy_asian_poker_game_guide||[]).push([[30],{3513:(e,n,t)=>{t.d(n,{A:()=>h});var r=t(6540),a=t(9030),o=t(4848);const s=e=>{let{card:n}=e;return(0,r.useEffect)((()=>{n&&console.log("Card rendered:",n)}),[n]),n?(0,o.jsx)("img",{src:`https://deckofcardsapi.com/static/img/${n}.png`,alt:n,className:"poker-card",onError:e=>{console.error(`Failed to load card image for ${n}`),e.target.className="poker-card-error",e.target.alt=n,e.target.src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'/%3E",e.target.insertAdjacentHTML("afterend",`<div style="position:absolute;">${n}</div>`)}}):(0,o.jsx)("span",{className:"poker-card-empty"})},i=()=>{const e=["A","2","3","4","5","6","7","8","9","0","J","Q","K"],n=["H","D","C","S"].flatMap((n=>e.map((e=>`${e}${n}`))));return l([...n])},l=e=>{const n=[...e];for(let t=n.length-1;t>0;t--){const e=Math.floor(Math.random()*(t+1));[n[t],n[e]]=[n[e],n[t]]}return n},c=10,d=1e3,f=e=>{const n=e.toString();if(3!==n.length)return console.error(`Invalid position format: ${e}. Expected xyz format.`),null;const t=parseInt(n[0],10),r=parseInt(n[1],10),a=parseInt(n[2],10);return t>=5||r>=c||![0,1,2].includes(a)?(console.error(`Invalid position values: row=${t}, col=${r}, offset=${a}`),null):{row:t,col:r,offset:a}},u=(e,n,t)=>({displayRow:e,displayCol:n}),h=e=>{let{configPath:n="/data/boards/double-board.json",predefinedCards:t=null,dealDelayMs:l=d}=e;const h=(0,a.Ay)(n),[p,g]=(0,r.useState)(null),[m,b]=(0,r.useState)([]),[x,y]=(0,r.useState)(0),[j,w]=(0,r.useState)(0),[S,k]=(0,r.useState)(!1),[C,$]=(0,r.useState)(null),[v,M]=(0,r.useState)(new Set),[P,A]=(0,r.useState)((()=>Array(5).fill(null).map((()=>Array(c).fill(null))))),N=(0,r.useMemo)((()=>t?Array.isArray(t)&&t.length>0&&Array.isArray(t[0])?t.flat():t:null),[t]),R=(0,r.useCallback)((()=>{y(0),w(0),k(!1),M(new Set),A(Array(5).fill(null).map((()=>Array(c).fill(null))))}),[]),O=(0,r.useCallback)((e=>{if(!p?.boardCardSchedule)return[];let n=[];for(let t=0;t<=e;t++)t<p.boardCardSchedule.length&&(n=[...n,...p.boardCardSchedule[t]]);return n}),[p]),E=(0,r.useMemo)((()=>{if(!p?.boardCardSchedule)return{rowOffset:0,colOffset:0};return(e=>{if(!e||0===e.length)return{rowOffset:0,colOffset:0};let n=5,t=-1,r=c,a=-1;e.forEach((e=>{const o=f(e);if(o){const{displayRow:e,displayCol:s}=u(o.row,o.col,o.offset);n=Math.min(n,e),t=Math.max(t,e),r=Math.min(r,s),a=Math.max(a,s)}}));const o=t-n+1,s=a-r+1;return{rowOffset:Math.floor((5-o)/2)-n,colOffset:Math.floor((c-s)/2)-r}})(p.boardCardSchedule.flat())}),[p]);(0,r.useEffect)((()=>{console.log("Fetching config from:",h),fetch(h).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status} \u2014 URL: ${h}`);return e.json()})).then((e=>{console.log("Config loaded:",e),g(e);const n=i();b(n),console.log("Generated random deck:",n),R()})).catch((e=>{console.error("Failed to load config:",e),$(`Failed to load config: ${e.message}`)}))}),[h,R]),(0,r.useEffect)((()=>{var e;!N||(e=N,Array.isArray(e)&&e.every((e=>null===e||(e=>{if(!e||"string"!=typeof e||2!==e.length)return!1;const n=e[0],t=e[1];return["A","2","3","4","5","6","7","8","9","0","J","Q","K"].includes(n)&&["H","D","C","S"].includes(t)})(e))))||$("Invalid predefined cards format")}),[N]),(0,r.useEffect)((()=>{if(!p||!S)return;const e=O(x);if(j<e.length){const n=setTimeout((()=>{const n=e[j];_(n,j,E),w(j+1)}),l);return()=>clearTimeout(n)}k(!1)}),[j,S,p,x,l,O,E]);const _=(e,n,t)=>{const r=f(e);if(!r)return;const{row:a,col:o,offset:s}=r,{displayRow:i,displayCol:l}=u(a,o),c=Math.max(0,Math.min(4,i+t.rowOffset)),d=Math.max(0,Math.min(9,l+t.colOffset));let h=null;h=N&&n<N.length?N[n]:m[n]||null,console.log(`Dealing card ${h} to position ${e} (${a},${o}) -> display (${i},${l}) -> centered (${c},${d})`);const p={card:h,originalRow:a,originalCol:o,offset:s,displayRow:c,displayCol:d,positionStr:e,isSelected:!1};A((e=>{const n=e.map((e=>[...e]));return n[c][d]=p,n}))};(0,r.useEffect)((()=>{p&&0===x&&!S&&0===j&&p.boardCardSchedule?.length>0&&(console.log("Auto-starting preflop deal"),k(!0))}),[p]);return C?(0,o.jsxs)("div",{className:"error-message",children:["Error: ",C]}):p?(0,o.jsxs)("div",{className:"poker-board-viewer",children:[(0,o.jsx)("h3",{children:p.name}),(0,o.jsx)("div",{className:"poker-grid",children:Array(5).fill(null).map(((e,n)=>(0,o.jsx)("div",{className:"poker-row",children:Array(c).fill(null).map(((e,t)=>{const r=P[n][t],a=n-E.rowOffset,i=t-E.colOffset,l=`${a}${i}`,d=a>=0&&i>=0?p?.boardNames?.[l]:null;return(0,o.jsxs)("div",{className:"poker-cell",children:[d&&(0,o.jsx)("div",{className:"board-name",children:d}),r&&(0,o.jsx)("div",{className:`card-container ${r.isSelected?"selected":""} ${1===r.offset?"offset-up":""} ${2===r.offset?"offset-right":""}`,onClick:()=>(e=>{if(!e)return;console.log(`Card clicked: ${e.card} at (${e.originalRow},${e.originalCol}), currently selected: ${e.isSelected}`);const{originalRow:n,originalCol:t,offset:r}=e,a=`${n}-${t}`;M((e=>{const n=new Set(e);return n.has(a)?n.delete(a):n.add(a),console.log("Selection toggled. New selection state:",n),n})),A((r=>{const a=r.map((e=>[...e])),o=!e.isSelected;for(let e=0;e<5;e++)for(let r=0;r<c;r++){const s=a[e][r];if(s&&s.originalRow===n&&s.originalCol===t){a[e][r]={...s,isSelected:o};break}}return a}))})(r),children:(0,o.jsx)(s,{card:r.card})})]},`${n}-${t}`)}))},n)))}),(0,o.jsxs)("div",{className:"controls",children:[(0,o.jsx)("button",{onClick:()=>{if(console.log("dealNextStreet called, current step:",x,"config length:",p?.boardCardSchedule?.length),!p||x>=p.boardCardSchedule.length-1)return;const e=x+1,n=O(x);y(e),k(!0),w(n.length)},disabled:x>=p.boardCardSchedule.length-1||S,children:"Deal Next Street"}),(0,o.jsx)("button",{onClick:()=>{if(!N){const e=i();b(e),console.log("Reshuffled deck:",e)}R()},disabled:S,children:"Replay Hand"})]})]}):(0,o.jsx)("div",{className:"loading",children:"Loading poker board configuration..."})}},7484:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"help-files/board-configurations/pandemic","title":"Pandemic","description":"Description of Pandemic configuration","source":"@site/docs/help-files/board-configurations/pandemic.mdx","sourceDirName":"help-files/board-configurations","slug":"/help-files/board-configurations/pandemic","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/pandemic","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/help-files/board-configurations/pandemic.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Pandemic","description":"Description of Pandemic configuration","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Wheel","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/wheel"},"next":{"title":"Bomba","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/bomba"}}');var a=t(4848),o=t(8453),s=t(3513);const i={title:"Pandemic",description:"Description of Pandemic configuration",sidebar_position:6},l=void 0,c={},d=[];function f(e){const n={li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"The board is dealt out as per the diagram below, with the final board a\r\n3x3 square."}),"\n",(0,a.jsx)(s.A,{configPath:"/data/boards/pandemic.json"}),"\n",(0,a.jsx)(n.p,{children:"Point types for pandemic:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Social distancing. Players must make a five card hand Omaha-style\r\nusing three board cards that do not share an edge. Ie. no horizontally\r\nor vertically adjacent cards. Players can play cards that are touching\r\ndiagonally."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'Contact tracing. Players must make a five card hand Omaha-style using\r\nthree board cards that are adjacent. This may be in a line, or in an\r\n"L" shape. Touching diagonally is not sufficient.'}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Games possible using the pandemic configuration include:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Best high social distancing, best high contact tracing, best Hand\r\nPoint (3 points);"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Best high/low social distancing, best high/low contact tracing, best\r\nHand Point (5 points);"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Best high/low social distancing, best Hand Point (3 points);"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Best high/low contact tracing, best Hand Point (3 points)."}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(6540);const a={},o=r.createContext(a);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);
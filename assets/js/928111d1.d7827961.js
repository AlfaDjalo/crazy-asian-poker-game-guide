"use strict";(self.webpackChunkcrazy_asian_poker_game_guide=self.webpackChunkcrazy_asian_poker_game_guide||[]).push([[520],{3513:(e,r,o)=>{o.d(r,{A:()=>h});var t=o(6540),n=o(9030),a=o(4848);const s=e=>{let{card:r}=e;return(0,t.useEffect)((()=>{r&&console.log("Card rendered:",r)}),[r]),r?(0,a.jsx)("img",{src:`https://deckofcardsapi.com/static/img/${r}.png`,alt:r,className:"poker-card",onError:e=>{console.error(`Failed to load card image for ${r}`),e.target.className="poker-card-error",e.target.alt=r,e.target.src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'/%3E",e.target.insertAdjacentHTML("afterend",`<div style="position:absolute;">${r}</div>`)}}):(0,a.jsx)("span",{className:"poker-card-empty"})},l=()=>{const e=["A","2","3","4","5","6","7","8","9","0","J","Q","K"],r=["H","D","C","S"].flatMap((r=>e.map((e=>`${e}${r}`))));return i([...r])},i=e=>{const r=[...e];for(let o=r.length-1;o>0;o--){const e=Math.floor(Math.random()*(o+1));[r[o],r[e]]=[r[e],r[o]]}return r},d=10,c=1e3,f=e=>{const r=e.toString();if(3!==r.length)return console.error(`Invalid position format: ${e}. Expected xyz format.`),null;const o=parseInt(r[0],10),t=parseInt(r[1],10),n=parseInt(r[2],10);return o>=5||t>=d||![0,1,2].includes(n)?(console.error(`Invalid position values: row=${o}, col=${t}, offset=${n}`),null):{row:o,col:t,offset:n}},u=(e,r,o)=>({displayRow:e,displayCol:r}),h=e=>{let{configPath:r="/data/boards/double-board.json",predefinedCards:o=null,dealDelayMs:i=c}=e;const h=(0,n.Ay)(r),[g,p]=(0,t.useState)(null),[m,b]=(0,t.useState)([]),[x,w]=(0,t.useState)(0),[S,y]=(0,t.useState)(0),[C,k]=(0,t.useState)(!1),[$,j]=(0,t.useState)(null),[v,M]=(0,t.useState)(new Set),[A,N]=(0,t.useState)((()=>Array(5).fill(null).map((()=>Array(d).fill(null))))),R=(0,t.useMemo)((()=>o?Array.isArray(o)&&o.length>0&&Array.isArray(o[0])?o.flat():o:null),[o]),E=(0,t.useCallback)((()=>{w(0),y(0),k(!1),M(new Set),N(Array(5).fill(null).map((()=>Array(d).fill(null))))}),[]),O=(0,t.useCallback)((e=>{if(!g?.boardCardSchedule)return[];let r=[];for(let o=0;o<=e;o++)o<g.boardCardSchedule.length&&(r=[...r,...g.boardCardSchedule[o]]);return r}),[g]),T=(0,t.useMemo)((()=>{if(!g?.boardCardSchedule)return{rowOffset:0,colOffset:0};return(e=>{if(!e||0===e.length)return{rowOffset:0,colOffset:0};let r=5,o=-1,t=d,n=-1;e.forEach((e=>{const a=f(e);if(a){const{displayRow:e,displayCol:s}=u(a.row,a.col,a.offset);r=Math.min(r,e),o=Math.max(o,e),t=Math.min(t,s),n=Math.max(n,s)}}));const a=o-r+1,s=n-t+1;return{rowOffset:Math.floor((5-a)/2)-r,colOffset:Math.floor((d-s)/2)-t}})(g.boardCardSchedule.flat())}),[g]);(0,t.useEffect)((()=>{console.log("Fetching config from:",h),fetch(h).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status} \u2014 URL: ${h}`);return e.json()})).then((e=>{console.log("Config loaded:",e),p(e);const r=l();b(r),console.log("Generated random deck:",r),E()})).catch((e=>{console.error("Failed to load config:",e),j(`Failed to load config: ${e.message}`)}))}),[h,E]),(0,t.useEffect)((()=>{var e;!R||(e=R,Array.isArray(e)&&e.every((e=>null===e||(e=>{if(!e||"string"!=typeof e||2!==e.length)return!1;const r=e[0],o=e[1];return["A","2","3","4","5","6","7","8","9","0","J","Q","K"].includes(r)&&["H","D","C","S"].includes(o)})(e))))||j("Invalid predefined cards format")}),[R]),(0,t.useEffect)((()=>{if(!g||!C)return;const e=O(x);if(S<e.length){const r=setTimeout((()=>{const r=e[S];D(r,S,T),y(S+1)}),i);return()=>clearTimeout(r)}k(!1)}),[S,C,g,x,i,O,T]);const D=(e,r,o)=>{const t=f(e);if(!t)return;const{row:n,col:a,offset:s}=t,{displayRow:l,displayCol:i}=u(n,a),d=Math.max(0,Math.min(4,l+o.rowOffset)),c=Math.max(0,Math.min(9,i+o.colOffset));let h=null;h=R&&r<R.length?R[r]:m[r]||null,console.log(`Dealing card ${h} to position ${e} (${n},${a}) -> display (${l},${i}) -> centered (${d},${c})`);const g={card:h,originalRow:n,originalCol:a,offset:s,displayRow:d,displayCol:c,positionStr:e,isSelected:!1};N((e=>{const r=e.map((e=>[...e]));return r[d][c]=g,r}))};(0,t.useEffect)((()=>{g&&0===x&&!C&&0===S&&g.boardCardSchedule?.length>0&&(console.log("Auto-starting preflop deal"),k(!0))}),[g]);return $?(0,a.jsxs)("div",{className:"error-message",children:["Error: ",$]}):g?(0,a.jsxs)("div",{className:"poker-board-viewer",children:[(0,a.jsx)("h3",{children:g.name}),(0,a.jsx)("div",{className:"poker-grid",children:Array(5).fill(null).map(((e,r)=>(0,a.jsx)("div",{className:"poker-row",children:Array(d).fill(null).map(((e,o)=>{const t=A[r][o],n=r-T.rowOffset,l=o-T.colOffset,i=`${n}${l}`,c=n>=0&&l>=0?g?.boardNames?.[i]:null;return(0,a.jsxs)("div",{className:"poker-cell",children:[c&&(0,a.jsx)("div",{className:"board-name",children:c}),t&&(0,a.jsx)("div",{className:`card-container ${t.isSelected?"selected":""} ${1===t.offset?"offset-up":""} ${2===t.offset?"offset-right":""}`,onClick:()=>(e=>{if(!e)return;console.log(`Card clicked: ${e.card} at (${e.originalRow},${e.originalCol}), currently selected: ${e.isSelected}`);const{originalRow:r,originalCol:o,offset:t}=e,n=`${r}-${o}`;M((e=>{const r=new Set(e);return r.has(n)?r.delete(n):r.add(n),console.log("Selection toggled. New selection state:",r),r})),N((t=>{const n=t.map((e=>[...e])),a=!e.isSelected;for(let e=0;e<5;e++)for(let t=0;t<d;t++){const s=n[e][t];if(s&&s.originalRow===r&&s.originalCol===o){n[e][t]={...s,isSelected:a};break}}return n}))})(t),children:(0,a.jsx)(s,{card:t.card})})]},`${r}-${o}`)}))},r)))}),(0,a.jsxs)("div",{className:"controls",children:[(0,a.jsx)("button",{onClick:()=>{if(console.log("dealNextStreet called, current step:",x,"config length:",g?.boardCardSchedule?.length),!g||x>=g.boardCardSchedule.length-1)return;const e=x+1,r=O(x);w(e),k(!0),y(r.length)},disabled:x>=g.boardCardSchedule.length-1||C,children:"Deal Next Street"}),(0,a.jsx)("button",{onClick:()=>{if(!R){const e=l();b(e),console.log("Reshuffled deck:",e)}E()},disabled:C,children:"Replay Hand"})]})]}):(0,a.jsx)("div",{className:"loading",children:"Loading poker board configuration..."})}},4978:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"help-files/board-configurations/single-board","title":"Single Board","description":"Description of Single Board configuration","source":"@site/docs/help-files/board-configurations/single-board.mdx","sourceDirName":"help-files/board-configurations","slug":"/help-files/board-configurations/single-board","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/single-board","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/help-files/board-configurations/single-board.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Single Board","description":"Description of Single Board configuration","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Extra Cards","permalink":"/crazy-asian-poker-game-guide/help-files/games/extra-cards"},"next":{"title":"Double Board","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/double-board"}}');var n=o(4848),a=o(8453),s=o(3513);const l={title:"Single Board",description:"Description of Single Board configuration",sidebar_position:1},i=void 0,d={},c=[];function f(e){const r={li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:"This is the standard hold'em boards, dealt in the usual manner - three\r\ncard flops for each board, a single turn card for each board, and a\r\nsingle river card for each board."}),"\n",(0,n.jsx)(s.A,{configPath:"/data/boards/single-board.json"}),"\n",(0,n.jsx)(r.p,{children:"Games possible using the single board configurations include:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"High only. The best high hand wins. This is the standard for no limit\r\nhold'em or PLO."}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"High / low split pot. The best high hand wins half the pot, the best\r\nlow hand wins half the pot. If there is no low possible then the high\r\nhand wins the entire pot. This is the standard for PLO8."}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"High / low / hand (3 points). The best high on the board is worth one\r\npoint, the best low on the board is worth one point, and the best five\r\ncard Hand Point is worth one point."}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(f,{...e})}):f(e)}},8453:(e,r,o)=>{o.d(r,{R:()=>s,x:()=>l});var t=o(6540);const n={},a=t.createContext(n);function s(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);
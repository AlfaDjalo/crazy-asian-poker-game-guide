"use strict";(self.webpackChunkcrazy_asian_poker_game_guide=self.webpackChunkcrazy_asian_poker_game_guide||[]).push([[564],{3513:(e,r,o)=>{o.d(r,{A:()=>f});var t=o(6540),n=o(9030),a=o(4848);const s=e=>{let{card:r}=e;return(0,t.useEffect)((()=>{r&&console.log("Card rendered:",r)}),[r]),r?(0,a.jsx)("img",{src:`https://deckofcardsapi.com/static/img/${r}.png`,alt:r,className:"poker-card",onError:e=>{console.error(`Failed to load card image for ${r}`),e.target.className="poker-card-error",e.target.alt=r,e.target.src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'/%3E",e.target.insertAdjacentHTML("afterend",`<div style="position:absolute;">${r}</div>`)}}):(0,a.jsx)("span",{className:"poker-card-empty"})},i=()=>{const e=["A","2","3","4","5","6","7","8","9","0","J","Q","K"],r=["H","D","C","S"].flatMap((r=>e.map((e=>`${e}${r}`))));return l([...r])},l=e=>{const r=[...e];for(let o=r.length-1;o>0;o--){const e=Math.floor(Math.random()*(o+1));[r[o],r[e]]=[r[e],r[o]]}return r},d=10,c=1e3,u=e=>{const r=e.toString();if(3!==r.length)return console.error(`Invalid position format: ${e}. Expected xyz format.`),null;const o=parseInt(r[0],10),t=parseInt(r[1],10),n=parseInt(r[2],10);return o>=5||t>=d||![0,1,2].includes(n)?(console.error(`Invalid position values: row=${o}, col=${t}, offset=${n}`),null):{row:o,col:t,offset:n}},h=(e,r,o)=>({displayRow:e,displayCol:r}),f=e=>{let{configPath:r="/data/boards/double-board.json",predefinedCards:o=null,dealDelayMs:l=c}=e;const f=(0,n.Ay)(r),[p,g]=(0,t.useState)(null),[m,b]=(0,t.useState)([]),[x,j]=(0,t.useState)(0),[w,y]=(0,t.useState)(0),[v,S]=(0,t.useState)(!1),[C,k]=(0,t.useState)(null),[$,T]=(0,t.useState)(new Set),[A,M]=(0,t.useState)((()=>Array(5).fill(null).map((()=>Array(d).fill(null))))),N=(0,t.useMemo)((()=>o?Array.isArray(o)&&o.length>0&&Array.isArray(o[0])?o.flat():o:null),[o]),B=(0,t.useCallback)((()=>{j(0),y(0),S(!1),T(new Set),M(Array(5).fill(null).map((()=>Array(d).fill(null))))}),[]),R=(0,t.useCallback)((e=>{if(!p?.boardCardSchedule)return[];let r=[];for(let o=0;o<=e;o++)o<p.boardCardSchedule.length&&(r=[...r,...p.boardCardSchedule[o]]);return r}),[p]),E=(0,t.useMemo)((()=>{if(!p?.boardCardSchedule)return{rowOffset:0,colOffset:0};return(e=>{if(!e||0===e.length)return{rowOffset:0,colOffset:0};let r=5,o=-1,t=d,n=-1;e.forEach((e=>{const a=u(e);if(a){const{displayRow:e,displayCol:s}=h(a.row,a.col,a.offset);r=Math.min(r,e),o=Math.max(o,e),t=Math.min(t,s),n=Math.max(n,s)}}));const a=o-r+1,s=n-t+1;return{rowOffset:Math.floor((5-a)/2)-r,colOffset:Math.floor((d-s)/2)-t}})(p.boardCardSchedule.flat())}),[p]);(0,t.useEffect)((()=>{console.log("Fetching config from:",f),fetch(f).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status} \u2014 URL: ${f}`);return e.json()})).then((e=>{console.log("Config loaded:",e),g(e);const r=i();b(r),console.log("Generated random deck:",r),B()})).catch((e=>{console.error("Failed to load config:",e),k(`Failed to load config: ${e.message}`)}))}),[f,B]),(0,t.useEffect)((()=>{var e;!N||(e=N,Array.isArray(e)&&e.every((e=>null===e||(e=>{if(!e||"string"!=typeof e||2!==e.length)return!1;const r=e[0],o=e[1];return["A","2","3","4","5","6","7","8","9","0","J","Q","K"].includes(r)&&["H","D","C","S"].includes(o)})(e))))||k("Invalid predefined cards format")}),[N]),(0,t.useEffect)((()=>{if(!p||!v)return;const e=R(x);if(w<e.length){const r=setTimeout((()=>{const r=e[w];O(r,w,E),y(w+1)}),l);return()=>clearTimeout(r)}S(!1)}),[w,v,p,x,l,R,E]);const O=(e,r,o)=>{const t=u(e);if(!t)return;const{row:n,col:a,offset:s}=t,{displayRow:i,displayCol:l}=h(n,a),d=Math.max(0,Math.min(4,i+o.rowOffset)),c=Math.max(0,Math.min(9,l+o.colOffset));let f=null;f=N&&r<N.length?N[r]:m[r]||null,console.log(`Dealing card ${f} to position ${e} (${n},${a}) -> display (${i},${l}) -> centered (${d},${c})`);const p={card:f,originalRow:n,originalCol:a,offset:s,displayRow:d,displayCol:c,positionStr:e,isSelected:!1};M((e=>{const r=e.map((e=>[...e]));return r[d][c]=p,r}))};(0,t.useEffect)((()=>{p&&0===x&&!v&&0===w&&p.boardCardSchedule?.length>0&&(console.log("Auto-starting preflop deal"),S(!0))}),[p]);return C?(0,a.jsxs)("div",{className:"error-message",children:["Error: ",C]}):p?(0,a.jsxs)("div",{className:"poker-board-viewer",children:[(0,a.jsx)("h3",{children:p.name}),(0,a.jsx)("div",{className:"poker-grid",children:Array(5).fill(null).map(((e,r)=>(0,a.jsx)("div",{className:"poker-row",children:Array(d).fill(null).map(((e,o)=>{const t=A[r][o],n=r-E.rowOffset,i=o-E.colOffset,l=`${n}${i}`,c=n>=0&&i>=0?p?.boardNames?.[l]:null;return(0,a.jsxs)("div",{className:"poker-cell",children:[c&&(0,a.jsx)("div",{className:"board-name",children:c}),t&&(0,a.jsx)("div",{className:`card-container ${t.isSelected?"selected":""} ${1===t.offset?"offset-up":""} ${2===t.offset?"offset-right":""}`,onClick:()=>(e=>{if(!e)return;console.log(`Card clicked: ${e.card} at (${e.originalRow},${e.originalCol}), currently selected: ${e.isSelected}`);const{originalRow:r,originalCol:o,offset:t}=e,n=`${r}-${o}`;T((e=>{const r=new Set(e);return r.has(n)?r.delete(n):r.add(n),console.log("Selection toggled. New selection state:",r),r})),M((t=>{const n=t.map((e=>[...e])),a=!e.isSelected;for(let e=0;e<5;e++)for(let t=0;t<d;t++){const s=n[e][t];if(s&&s.originalRow===r&&s.originalCol===o){n[e][t]={...s,isSelected:a};break}}return n}))})(t),children:(0,a.jsx)(s,{card:t.card})})]},`${r}-${o}`)}))},r)))}),(0,a.jsxs)("div",{className:"controls",children:[(0,a.jsx)("button",{onClick:()=>{if(console.log("dealNextStreet called, current step:",x,"config length:",p?.boardCardSchedule?.length),!p||x>=p.boardCardSchedule.length-1)return;const e=x+1,r=R(x);j(e),S(!0),y(r.length)},disabled:x>=p.boardCardSchedule.length-1||v,children:"Deal Next Street"}),(0,a.jsx)("button",{onClick:()=>{if(!N){const e=i();b(e),console.log("Reshuffled deck:",e)}B()},disabled:v,children:"Replay Hand"})]})]}):(0,a.jsx)("div",{className:"loading",children:"Loading poker board configuration..."})}},8453:(e,r,o)=>{o.d(r,{R:()=>s,x:()=>i});var t=o(6540);const n={},a=t.createContext(n);function s(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(a.Provider,{value:r},e.children)}},9220:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"help-files/board-configurations/triple-board","title":"Triple Board","description":"Description of Triple Board configuration","source":"@site/docs/help-files/board-configurations/triple-board.mdx","sourceDirName":"help-files/board-configurations","slug":"/help-files/board-configurations/triple-board","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/triple-board","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/help-files/board-configurations/triple-board.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Triple Board","description":"Description of Triple Board configuration","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Double Board","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/double-board"},"next":{"title":"Social Distancing","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/social-distancing"}}');var n=o(4848),a=o(8453),s=o(3513);const i={title:"Triple Board",description:"Description of Triple Board configuration",sidebar_position:3},l=void 0,d={},c=[];function u(e){const r={br:"br",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:"This is three regular hold'em boards, dealt in the usual manner - three\r\nthree card flops, three single card turns and three single card rivers.\r\nThe three boards are independent. Omaha-style showdown usually used."}),"\n",(0,n.jsx)(s.A,{configPath:"/data/boards/triple-board.json"}),"\n",(0,n.jsx)(r.p,{children:"Games possible using the triple board configurations include:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"High/high/high (3 points); The high on each board is worth one point."}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"High/high/high/hand (4 points). The high on each board is worth one\r\npoint, plus one point for the best five card Hand Point."}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Balance (5 points). This is high/high/high/high hand/low hand."}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:["Tilt (3 points). The high on each board is worth one point.",(0,n.jsx)(r.br,{}),"\n","For Board 1, the third flop card must be used.",(0,n.jsx)(r.br,{}),"\n","For Board 2, the turn card must be used.",(0,n.jsx)(r.br,{}),"\n","For Board 3, the river card must be used."]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:["Tilt (5 points). The high on each board is worth one point, plus one\r\npoint for the best five card Hand Point and one point for the best\r\nhand using the three mandatory cards.",(0,n.jsx)(r.br,{}),"\n","For Board 1, the third flop card must be used.",(0,n.jsx)(r.br,{}),"\n","For Board 2, the turn card must be used.",(0,n.jsx)(r.br,{}),"\n","For Board 3, the river card must be used."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"A variant is to deal a floater on the river, which can be used with any\r\nboard."})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);
"use strict";(self.webpackChunkcrazy_asian_poker_game_guide=self.webpackChunkcrazy_asian_poker_game_guide||[]).push([[210],{572:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"help-files/board-configurations/double-board","title":"Double Board","description":"Description of Double Board configuration","source":"@site/docs/help-files/board-configurations/double-board.mdx","sourceDirName":"help-files/board-configurations","slug":"/help-files/board-configurations/double-board","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/double-board","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/help-files/board-configurations/double-board.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Double Board","description":"Description of Double Board configuration","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Single Board","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/single-board"},"next":{"title":"Triple Board","permalink":"/crazy-asian-poker-game-guide/help-files/board-configurations/triple-board"}}');var n=r(4848),a=r(8453),s=r(3513);const l={title:"Double Board",description:"Description of Double Board configuration",sidebar_position:2},i=void 0,d={},c=[];function h(e){const o={li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.p,{children:"This is two regular hold'em boards, dealt in the usual manner - three\r\ncard flops for each board, a single turn card for each board, and a\r\nsingle river card for each board. The two boards are independent.\r\nOmaha-style showdown usually used."}),"\n",(0,n.jsx)(s.A,{configPath:"/data/boards/double-board.json"}),"\n",(0,n.jsx)(o.p,{children:"Games possible using the double board configurations include:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:["\n",(0,n.jsx)(o.p,{children:"Best high/best low (split pot). Also called ultimate high/low. The\r\nbest high across both boards wins half the pot, and the best low\r\nacross both boards wins half the pot."}),"\n"]}),"\n",(0,n.jsxs)(o.li,{children:["\n",(0,n.jsx)(o.p,{children:"High/high/hand (3 points). The high on each board is worth one point,\r\nplus a third point for the best five card Hand Point."}),"\n"]}),"\n",(0,n.jsxs)(o.li,{children:["\n",(0,n.jsx)(o.p,{children:"Best high/best low/hand (3 points). The best high across both boards\r\nis worth one point, the best low across both boards is worth one\r\npoint, and the best five card Hand Point is worth one point."}),"\n"]}),"\n",(0,n.jsxs)(o.li,{children:["\n",(0,n.jsx)(o.p,{children:"High/low/high/low/hand (5 points). The best high on each board\r\nreceives one point, the best low on each board receives one point, and\r\nthe best Hand Point receives one point."}),"\n"]}),"\n",(0,n.jsxs)(o.li,{children:["\n",(0,n.jsx)(o.p,{children:"High/low/high/low/high hand/low hand (6 points). The best high on each\r\nboard receives one point, the best low on each board receives one\r\npoint, the best high Hand Point receives one point and the best low\r\nHand Point receives one point."}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},3513:(e,o,r)=>{r.d(o,{A:()=>f});var t=r(6540),n=r(9030),a=r(4848);const s=e=>{let{card:o}=e;return(0,t.useEffect)((()=>{o&&console.log("Card rendered:",o)}),[o]),o?(0,a.jsx)("img",{src:`https://deckofcardsapi.com/static/img/${o}.png`,alt:o,className:"poker-card",onError:e=>{console.error(`Failed to load card image for ${o}`),e.target.className="poker-card-error",e.target.alt=o,e.target.src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'/%3E",e.target.insertAdjacentHTML("afterend",`<div style="position:absolute;">${o}</div>`)}}):(0,a.jsx)("span",{className:"poker-card-empty"})},l=()=>{const e=["A","2","3","4","5","6","7","8","9","0","J","Q","K"],o=["H","D","C","S"].flatMap((o=>e.map((e=>`${e}${o}`))));return i([...o])},i=e=>{const o=[...e];for(let r=o.length-1;r>0;r--){const e=Math.floor(Math.random()*(r+1));[o[r],o[e]]=[o[e],o[r]]}return o},d=10,c=1e3,h=e=>{const o=e.toString();if(3!==o.length)return console.error(`Invalid position format: ${e}. Expected xyz format.`),null;const r=parseInt(o[0],10),t=parseInt(o[1],10),n=parseInt(o[2],10);return r>=5||t>=d||![0,1,2].includes(n)?(console.error(`Invalid position values: row=${r}, col=${t}, offset=${n}`),null):{row:r,col:t,offset:n}},u=(e,o,r)=>({displayRow:e,displayCol:o}),f=e=>{let{configPath:o="/data/boards/double-board.json",predefinedCards:r=null,dealDelayMs:i=c}=e;const f=(0,n.Ay)(o),[p,g]=(0,t.useState)(null),[b,m]=(0,t.useState)([]),[w,x]=(0,t.useState)(0),[v,y]=(0,t.useState)(0),[j,S]=(0,t.useState)(!1),[C,k]=(0,t.useState)(null),[$,A]=(0,t.useState)(new Set),[M,N]=(0,t.useState)((()=>Array(5).fill(null).map((()=>Array(d).fill(null))))),D=(0,t.useMemo)((()=>r?Array.isArray(r)&&r.length>0&&Array.isArray(r[0])?r.flat():r:null),[r]),R=(0,t.useCallback)((()=>{x(0),y(0),S(!1),A(new Set),N(Array(5).fill(null).map((()=>Array(d).fill(null))))}),[]),T=(0,t.useCallback)((e=>{if(!p?.boardCardSchedule)return[];let o=[];for(let r=0;r<=e;r++)r<p.boardCardSchedule.length&&(o=[...o,...p.boardCardSchedule[r]]);return o}),[p]),H=(0,t.useMemo)((()=>{if(!p?.boardCardSchedule)return{rowOffset:0,colOffset:0};return(e=>{if(!e||0===e.length)return{rowOffset:0,colOffset:0};let o=5,r=-1,t=d,n=-1;e.forEach((e=>{const a=h(e);if(a){const{displayRow:e,displayCol:s}=u(a.row,a.col,a.offset);o=Math.min(o,e),r=Math.max(r,e),t=Math.min(t,s),n=Math.max(n,s)}}));const a=r-o+1,s=n-t+1;return{rowOffset:Math.floor((5-a)/2)-o,colOffset:Math.floor((d-s)/2)-t}})(p.boardCardSchedule.flat())}),[p]);(0,t.useEffect)((()=>{console.log("Fetching config from:",f),fetch(f).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status} \u2014 URL: ${f}`);return e.json()})).then((e=>{console.log("Config loaded:",e),g(e);const o=l();m(o),console.log("Generated random deck:",o),R()})).catch((e=>{console.error("Failed to load config:",e),k(`Failed to load config: ${e.message}`)}))}),[f,R]),(0,t.useEffect)((()=>{var e;!D||(e=D,Array.isArray(e)&&e.every((e=>null===e||(e=>{if(!e||"string"!=typeof e||2!==e.length)return!1;const o=e[0],r=e[1];return["A","2","3","4","5","6","7","8","9","0","J","Q","K"].includes(o)&&["H","D","C","S"].includes(r)})(e))))||k("Invalid predefined cards format")}),[D]),(0,t.useEffect)((()=>{if(!p||!j)return;const e=T(w);if(v<e.length){const o=setTimeout((()=>{const o=e[v];E(o,v,H),y(v+1)}),i);return()=>clearTimeout(o)}S(!1)}),[v,j,p,w,i,T,H]);const E=(e,o,r)=>{const t=h(e);if(!t)return;const{row:n,col:a,offset:s}=t,{displayRow:l,displayCol:i}=u(n,a),d=Math.max(0,Math.min(4,l+r.rowOffset)),c=Math.max(0,Math.min(9,i+r.colOffset));let f=null;f=D&&o<D.length?D[o]:b[o]||null,console.log(`Dealing card ${f} to position ${e} (${n},${a}) -> display (${l},${i}) -> centered (${d},${c})`);const p={card:f,originalRow:n,originalCol:a,offset:s,displayRow:d,displayCol:c,positionStr:e,isSelected:!1};N((e=>{const o=e.map((e=>[...e]));return o[d][c]=p,o}))};(0,t.useEffect)((()=>{p&&0===w&&!j&&0===v&&p.boardCardSchedule?.length>0&&(console.log("Auto-starting preflop deal"),S(!0))}),[p]);return C?(0,a.jsxs)("div",{className:"error-message",children:["Error: ",C]}):p?(0,a.jsxs)("div",{className:"poker-board-viewer",children:[(0,a.jsx)("h3",{children:p.name}),(0,a.jsx)("div",{className:"poker-grid",children:Array(5).fill(null).map(((e,o)=>(0,a.jsx)("div",{className:"poker-row",children:Array(d).fill(null).map(((e,r)=>{const t=M[o][r],n=o-H.rowOffset,l=r-H.colOffset,i=`${n}${l}`,c=n>=0&&l>=0?p?.boardNames?.[i]:null;return(0,a.jsxs)("div",{className:"poker-cell",children:[c&&(0,a.jsx)("div",{className:"board-name",children:c}),t&&(0,a.jsx)("div",{className:`card-container ${t.isSelected?"selected":""} ${1===t.offset?"offset-up":""} ${2===t.offset?"offset-right":""}`,onClick:()=>(e=>{if(!e)return;console.log(`Card clicked: ${e.card} at (${e.originalRow},${e.originalCol}), currently selected: ${e.isSelected}`);const{originalRow:o,originalCol:r,offset:t}=e,n=`${o}-${r}`;A((e=>{const o=new Set(e);return o.has(n)?o.delete(n):o.add(n),console.log("Selection toggled. New selection state:",o),o})),N((t=>{const n=t.map((e=>[...e])),a=!e.isSelected;for(let e=0;e<5;e++)for(let t=0;t<d;t++){const s=n[e][t];if(s&&s.originalRow===o&&s.originalCol===r){n[e][t]={...s,isSelected:a};break}}return n}))})(t),children:(0,a.jsx)(s,{card:t.card})})]},`${o}-${r}`)}))},o)))}),(0,a.jsxs)("div",{className:"controls",children:[(0,a.jsx)("button",{onClick:()=>{if(console.log("dealNextStreet called, current step:",w,"config length:",p?.boardCardSchedule?.length),!p||w>=p.boardCardSchedule.length-1)return;const e=w+1,o=T(w);x(e),S(!0),y(o.length)},disabled:w>=p.boardCardSchedule.length-1||j,children:"Deal Next Street"}),(0,a.jsx)("button",{onClick:()=>{if(!D){const e=l();m(e),console.log("Reshuffled deck:",e)}R()},disabled:j,children:"Replay Hand"})]})]}):(0,a.jsx)("div",{className:"loading",children:"Loading poker board configuration..."})}},8453:(e,o,r)=>{r.d(o,{R:()=>s,x:()=>l});var t=r(6540);const n={},a=t.createContext(n);function s(e){const o=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(a.Provider,{value:o},e.children)}}}]);
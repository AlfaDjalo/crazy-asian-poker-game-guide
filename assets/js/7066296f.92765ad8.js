"use strict";(self.webpackChunkcrazy_asian_poker_game_guide=self.webpackChunkcrazy_asian_poker_game_guide||[]).push([[173],{1091:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"help-files/games/low-points","title":"Determining the Low","description":"Determination of the winning low","source":"@site/docs/help-files/games/low-points.mdx","sourceDirName":"help-files/games","slug":"/help-files/games/low-points","permalink":"/crazy-asian-poker-game-guide/help-files/games/low-points","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/help-files/games/low-points.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Determining the Low","description":"Determination of the winning low","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Point Types","permalink":"/crazy-asian-poker-game-guide/help-files/games/point-types"},"next":{"title":"Betting Structures","permalink":"/crazy-asian-poker-game-guide/help-files/games/betting-structures"}}');var o=n(4848),s=n(8453),a=n(3513);const l={title:"Determining the Low",description:"Determination of the winning low",sidebar_position:6},i=void 0,c={},d=[];function u(e){const t={li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"There are a number of ways in which the best low hand can be determined:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Traditional 8-or-better qualifying low. Ace is the lowest card,\r\nstraights and flushes do not matter."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"7-2 low. This is an unqualified low. Ace plays high. Straights and\r\nflushes impact hand rankings. Hand ranking is the reverse of standard\r\nhigh hand ranking."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"6-2 low. This is an unqualified low. Ace plays high. Straights and\r\nflushes do not matter."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Badugi. This is an unqualified low using up to four cards. This low\r\ncan use at most one card from each suit and one card of each rank."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Least suits. This can be any of the first three low types\r\n(traditional, 7-2 or 6-2), but when the best low is held my more than\r\none player, the hand with the least number of suits wins the hand. If\r\nmore than one player has the same number of suits with the lowest\r\nhand, the point is chopped between them."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(a.A,{configPath:"/data/boards/single-board.json",predefinedCards:[["AS","2C","9H"],["QC"],["7D"]]})]})}function f(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},3513:(e,t,n)=>{n.d(t,{A:()=>h});var r=n(6540),o=n(9030),s=n(4848);const a=e=>{let{card:t}=e;return(0,r.useEffect)((()=>{t&&console.log("Card rendered:",t)}),[t]),t?(0,s.jsx)("img",{src:`https://deckofcardsapi.com/static/img/${t}.png`,alt:t,className:"poker-card",onError:e=>{console.error(`Failed to load card image for ${t}`),e.target.className="poker-card-error",e.target.alt=t,e.target.src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'/%3E",e.target.insertAdjacentHTML("afterend",`<div style="position:absolute;">${t}</div>`)}}):(0,s.jsx)("span",{className:"poker-card-empty"})},l=()=>{const e=["A","2","3","4","5","6","7","8","9","0","J","Q","K"],t=["H","D","C","S"].flatMap((t=>e.map((e=>`${e}${t}`))));return i([...t])},i=e=>{const t=[...e];for(let n=t.length-1;n>0;n--){const e=Math.floor(Math.random()*(n+1));[t[n],t[e]]=[t[e],t[n]]}return t},c=10,d=1e3,u=e=>{const t=e.toString();if(3!==t.length)return console.error(`Invalid position format: ${e}. Expected xyz format.`),null;const n=parseInt(t[0],10),r=parseInt(t[1],10),o=parseInt(t[2],10);return n>=5||r>=c||![0,1,2].includes(o)?(console.error(`Invalid position values: row=${n}, col=${r}, offset=${o}`),null):{row:n,col:r,offset:o}},f=(e,t,n)=>({displayRow:e,displayCol:t}),h=e=>{let{configPath:t="/data/boards/double-board.json",predefinedCards:n=null,dealDelayMs:i=d}=e;const h=(0,o.Ay)(t),[p,g]=(0,r.useState)(null),[m,w]=(0,r.useState)([]),[x,y]=(0,r.useState)(0),[b,S]=(0,r.useState)(0),[k,C]=(0,r.useState)(!1),[j,$]=(0,r.useState)(null),[v,A]=(0,r.useState)(new Set),[M,N]=(0,r.useState)((()=>Array(5).fill(null).map((()=>Array(c).fill(null))))),R=(0,r.useMemo)((()=>n?Array.isArray(n)&&n.length>0&&Array.isArray(n[0])?n.flat():n:null),[n]),T=(0,r.useCallback)((()=>{y(0),S(0),C(!1),A(new Set),N(Array(5).fill(null).map((()=>Array(c).fill(null))))}),[]),D=(0,r.useCallback)((e=>{if(!p?.boardCardSchedule)return[];let t=[];for(let n=0;n<=e;n++)n<p.boardCardSchedule.length&&(t=[...t,...p.boardCardSchedule[n]]);return t}),[p]),E=(0,r.useMemo)((()=>{if(!p?.boardCardSchedule)return{rowOffset:0,colOffset:0};return(e=>{if(!e||0===e.length)return{rowOffset:0,colOffset:0};let t=5,n=-1,r=c,o=-1;e.forEach((e=>{const s=u(e);if(s){const{displayRow:e,displayCol:a}=f(s.row,s.col,s.offset);t=Math.min(t,e),n=Math.max(n,e),r=Math.min(r,a),o=Math.max(o,a)}}));const s=n-t+1,a=o-r+1;return{rowOffset:Math.floor((5-s)/2)-t,colOffset:Math.floor((c-a)/2)-r}})(p.boardCardSchedule.flat())}),[p]);(0,r.useEffect)((()=>{console.log("Fetching config from:",h),fetch(h).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status} \u2014 URL: ${h}`);return e.json()})).then((e=>{console.log("Config loaded:",e),g(e);const t=l();w(t),console.log("Generated random deck:",t),T()})).catch((e=>{console.error("Failed to load config:",e),$(`Failed to load config: ${e.message}`)}))}),[h,T]),(0,r.useEffect)((()=>{var e;!R||(e=R,Array.isArray(e)&&e.every((e=>null===e||(e=>{if(!e||"string"!=typeof e||2!==e.length)return!1;const t=e[0],n=e[1];return["A","2","3","4","5","6","7","8","9","0","J","Q","K"].includes(t)&&["H","D","C","S"].includes(n)})(e))))||$("Invalid predefined cards format")}),[R]),(0,r.useEffect)((()=>{if(!p||!k)return;const e=D(x);if(b<e.length){const t=setTimeout((()=>{const t=e[b];O(t,b,E),S(b+1)}),i);return()=>clearTimeout(t)}C(!1)}),[b,k,p,x,i,D,E]);const O=(e,t,n)=>{const r=u(e);if(!r)return;const{row:o,col:s,offset:a}=r,{displayRow:l,displayCol:i}=f(o,s),c=Math.max(0,Math.min(4,l+n.rowOffset)),d=Math.max(0,Math.min(9,i+n.colOffset));let h=null;h=R&&t<R.length?R[t]:m[t]||null,console.log(`Dealing card ${h} to position ${e} (${o},${s}) -> display (${l},${i}) -> centered (${c},${d})`);const p={card:h,originalRow:o,originalCol:s,offset:a,displayRow:c,displayCol:d,positionStr:e,isSelected:!1};N((e=>{const t=e.map((e=>[...e]));return t[c][d]=p,t}))};(0,r.useEffect)((()=>{p&&0===x&&!k&&0===b&&p.boardCardSchedule?.length>0&&(console.log("Auto-starting preflop deal"),C(!0))}),[p]);return j?(0,s.jsxs)("div",{className:"error-message",children:["Error: ",j]}):p?(0,s.jsxs)("div",{className:"poker-board-viewer",children:[(0,s.jsx)("h3",{children:p.name}),(0,s.jsx)("div",{className:"poker-grid",children:Array(5).fill(null).map(((e,t)=>(0,s.jsx)("div",{className:"poker-row",children:Array(c).fill(null).map(((e,n)=>{const r=M[t][n],o=t-E.rowOffset,l=n-E.colOffset,i=`${o}${l}`,d=o>=0&&l>=0?p?.boardNames?.[i]:null;return(0,s.jsxs)("div",{className:"poker-cell",children:[d&&(0,s.jsx)("div",{className:"board-name",children:d}),r&&(0,s.jsx)("div",{className:`card-container ${r.isSelected?"selected":""} ${1===r.offset?"offset-up":""} ${2===r.offset?"offset-right":""}`,onClick:()=>(e=>{if(!e)return;console.log(`Card clicked: ${e.card} at (${e.originalRow},${e.originalCol}), currently selected: ${e.isSelected}`);const{originalRow:t,originalCol:n,offset:r}=e,o=`${t}-${n}`;A((e=>{const t=new Set(e);return t.has(o)?t.delete(o):t.add(o),console.log("Selection toggled. New selection state:",t),t})),N((r=>{const o=r.map((e=>[...e])),s=!e.isSelected;for(let e=0;e<5;e++)for(let r=0;r<c;r++){const a=o[e][r];if(a&&a.originalRow===t&&a.originalCol===n){o[e][r]={...a,isSelected:s};break}}return o}))})(r),children:(0,s.jsx)(a,{card:r.card})})]},`${t}-${n}`)}))},t)))}),(0,s.jsxs)("div",{className:"controls",children:[(0,s.jsx)("button",{onClick:()=>{if(console.log("dealNextStreet called, current step:",x,"config length:",p?.boardCardSchedule?.length),!p||x>=p.boardCardSchedule.length-1)return;const e=x+1,t=D(x);y(e),C(!0),S(t.length)},disabled:x>=p.boardCardSchedule.length-1||k,children:"Deal Next Street"}),(0,s.jsx)("button",{onClick:()=>{if(!R){const e=l();w(e),console.log("Reshuffled deck:",e)}T()},disabled:k,children:"Replay Hand"})]})]}):(0,s.jsx)("div",{className:"loading",children:"Loading poker board configuration..."})}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var r=n(6540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);